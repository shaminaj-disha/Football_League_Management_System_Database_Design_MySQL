

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Joker
 */
public class Query extends javax.swing.JFrame {

    /**
     * Creates new form Query
     */
    Connection connect;
    public Query(Connection c) {
        initComponents();
        this.connect = c;
    }
    
    
    public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        View = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        topScorerCombo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        topCardCombo = new javax.swing.JComboBox<>();
        cardTeamCombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        CardType = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        playerTypeCombo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        teamComboBox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fixtureCombo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        prevMatch = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("*Top ");

        View.setText("View");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel2.setText("players of");

        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        topScorerCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel3.setText("Goalscorer of Laliga");

        jLabel4.setText("*Top");

        topCardCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));

        cardTeamCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alavés", "Athletic Bilbao", "Atlético Madrid", "Barcelona", "Celta Vigo", "Deportivo La Coruña", "Eibar", "Espanyol", "Granada", "Las Palmas", "Leganés", "Málaga", "Osasuna", "Real Betis", "Real Madrid", "Real Sociedad", "Sevilla", "Sporting Gijón", "Valencia", "Villarreal" }));

        jLabel5.setText("who concede most");

        jLabel6.setText(" Cards  in LaLiga");

        CardType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yellow", "Red" }));

        jLabel7.setText("*List of");

        playerTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Goalkeeper", "Midfielder", "Defender", "Forward" }));
        playerTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerTypeComboActionPerformed(evt);
            }
        });

        jLabel8.setText("of");

        teamComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alavés", "Athletic Bilbao", "Atlético Madrid", "Barcelona", "Celta Vigo", "Deportivo La Coruña", "Eibar", "Espanyol", "Granada", "Las Palmas", "Leganés", "Málaga", "Osasuna", "Real Betis", "Real Madrid", "Real Sociedad", "Sevilla", "Sporting Gijón", "Valencia", "Villarreal" }));

        jButton1.setText("View");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setText("* Upcoming ");

        fixtureCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        jLabel10.setText("Match Fixtures of Laliga");

        jButton3.setText("View");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel11.setText("* Previous ");

        prevMatch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7" }));

        jLabel12.setText("match details");

        jButton4.setText("View");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel13.setText("*Scorer of ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alavés", "Athletic Bilbao", "Atlético Madrid", "Barcelona", "Celta Vigo", "Deportivo La Coruña", "Eibar", "Espanyol", "Granada", "Las Palmas", "Leganés", "Málaga", "Osasuna", "Real Betis", "Real Madrid", "Real Sociedad", "Sevilla", "Sporting Gijón", "Valencia", "Villarreal" }));

        jLabel14.setText("Vs");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alavés", "Athletic Bilbao", "Atlético Madrid", "Barcelona", "Celta Vigo", "Deportivo La Coruña", "Eibar", "Espanyol", "Granada", "Las Palmas", "Leganés", "Málaga", "Osasuna", "Real Betis", "Real Madrid", "Real Sociedad", "Sevilla", "Sporting Gijón", "Valencia", "Villarreal" }));

        jButton5.setText("View");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel15.setText("*Coaches of Laliga whose Nationality is");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Argentine", "Spanish", "English", "French" }));

        jButton6.setText("View");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/back.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(topScorerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(View))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CardType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(topCardCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cardTeamCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addGap(0, 49, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(playerTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fixtureCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(prevMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(View)
                            .addComponent(topScorerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(topCardCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardTeamCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jButton2)
                            .addComponent(CardType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(playerTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(fixtureCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jButton3))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(prevMatch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            String cardType;
            //String team;
            String playerNumber = topCardCombo.getSelectedItem().toString();
            String cardTeam = cardTeamCombo.getSelectedItem().toString();
            String card= CardType.getSelectedItem().toString();
            if(card.equals("Yellow"))
            {
                cardType = "yellow_card";
            }
            else 
                cardType = "red_card";
            
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery(" SELECT player.player_name as Player, SUM(player_stats."+cardType+")as "
                    + "Cards FROM player INNER JOIN player_stats ON player.player_id = player_stats.player_id "
                    + "INNER JOIN team ON team.team_id = player.team_id WHERE team.team_name = '"+cardTeam+"' "
                    + "GROUP BY player_stats.player_id ORDER BY SUM(player_stats.yellow_card) DESC LIMIT "+playerNumber+" ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        try{
            String playerNumber = topScorerCombo.getSelectedItem().toString();
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery(" SELECT player.player_name as Player, SUM(player_stats.goals)as Goals "
                    + "FROM player INNER JOIN player_stats ON player.player_id = player_stats.player_id "
                    + "GROUP BY player_stats.player_id ORDER BY SUM(player_stats.goals) DESC LIMIT "+ playerNumber+ " ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            
        }
        
    }//GEN-LAST:event_ViewActionPerformed

    private void playerTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerTypeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerTypeComboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
            try{
            String playerPos = playerTypeCombo.getSelectedItem().toString();
            System.out.println(playerPos);
            String playerTeam = teamComboBox.getSelectedItem().toString();
            System.out.println(playerTeam);
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery("SELECT player.player_name as Player FROM player INNER JOIN "
                    + "team ON team.team_id = player.team_id WHERE player.player_position = '"+playerPos+"' "
                    + "AND team.team_name = '"+playerTeam+"' ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try{
            String matchNumber = fixtureCombo.getSelectedItem().toString();
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery("SELECT schedules.play_date , homeTeam.team_name as Home, AwayTeam.team_name as Away , \n" +
"				time_slot.start_time , matchplay.stadium_name FROM schedules INNER JOIN \n" +
"				time_slot ON schedules.time_slot_id = time_slot.time_slot_id INNER join \n" +
"				matchplay ON schedules.match_id = matchplay.match_id INNER JOIN team as homeTeam \n" +
"				on matchplay.home_team_id = homeTeam.team_id INNER JOIN \n" +
"				team as AwayTeam on matchplay.away_team_id = AwayTeam.team_id \n" +
"				WHERE schedules.play_date >'2017-08-08' ORDER BY schedules.play_date  LIMIT "+ matchNumber  +" ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try{
            String matchNumber = prevMatch.getSelectedItem().toString();
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery("SELECT schedules.play_date , homeTeam.team_name as Home, \n" +
"				AwayTeam.team_name as Away, matchplay.score , matchplay.match_id FROM schedules INNER join matchplay\n" +
"				ON schedules.match_id = matchplay.match_id INNER JOIN team as homeTeam on \n" +
"				matchplay.home_team_id = homeTeam.team_id INNER JOIN team as AwayTeam on \n" +
"				matchplay.away_team_id = AwayTeam.team_id WHERE schedules.play_date <'2017-08-08' ORDER BY `schedules`.`play_date` LIMIT "+ matchNumber +" ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
           try{
            String hometeamid;
            String awayteamid;
            String homeTeam = jComboBox1.getSelectedItem().toString();
            String awayTeam = jComboBox2.getSelectedItem().toString();
            if(!homeTeam.equals(awayTeam)){
            
            if(homeTeam.equals("Barcelona"))
            {
                hometeamid = "4";
            }
            else
                hometeamid = "15";
           
            if(awayTeam.equals("Real Madrid"))
            {
                awayteamid = "15";
            }
            else 
                awayteamid = "4";
            
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery("SELECT player.player_name , goals.goal_time, team.team_name FROM goals "
                    + "INNER JOIN player on goals.player_id = player.player_id INNER JOIN matchplay ON"
                    + " goals.match_id = matchplay.match_id INNER JOIN team ON goals.team_id = team.team_id "
                    + "WHERE matchplay.home_team_id =" +hometeamid+ "AND matchplay.away_team_id = "+ awayteamid +" ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            }
            else{
                System.out.println("Same Team");
            }
            
        }
        catch(Exception e){
            System.out.println("Error");
        }
                
        
            
            
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       try{
            String nat = jComboBox3.getSelectedItem().toString();
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery(" SELECT coach.coach_name as Coach , team.team_name as Team"
                    + " FROM coach INNER JOIN team on team.coach_id = coach.coach_id WHERE coach.nationality = '"+ nat +"' ");
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            System.out.println("Error");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Query.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Query(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CardType;
    private javax.swing.JButton View;
    private javax.swing.JComboBox<String> cardTeamCombo;
    private javax.swing.JComboBox<String> fixtureCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> playerTypeCombo;
    private javax.swing.JComboBox<String> prevMatch;
    private javax.swing.JComboBox<String> teamComboBox;
    private javax.swing.JComboBox<String> topCardCombo;
    private javax.swing.JComboBox<String> topScorerCombo;
    // End of variables declaration//GEN-END:variables
}
