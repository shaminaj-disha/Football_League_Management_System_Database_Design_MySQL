
import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Joker
 */
public class TableClass extends javax.swing.JFrame {

    /**
     * Creates new form TableClass
     */
    Connection connect;
    String tableName;
    
    public TableClass(Connection c) {
        this.connect = c;
        initComponents();
        showTable();
        tableName = tableComboBox2.getSelectedItem().toString();
        //System.out.println(tableName);
        try{
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery("select * from "+tableName);
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableComboBox2 = new javax.swing.JComboBox<>();
        insertBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Welcome To LaligaBuzz");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tableComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tableComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tableComboBox2ActionPerformed(evt);
            }
        });

        insertBtn.setText("Insert");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null", "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jButton1.setText("LogOut");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Show Queries");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 24)); // NOI18N
        jLabel1.setText("Table");

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 14)); // NOI18N
        jLabel2.setText("Tables");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(tableComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(deleteBtn)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                            .addComponent(insertBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(102, 102, 102)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(281, 281, 281))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tableComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(insertBtn))
                            .addGap(7, 7, 7))
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteBtn)
                            .addComponent(updateBtn))
                        .addGap(171, 171, 171)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tableComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tableComboBox2ActionPerformed
        tableName = tableComboBox2.getSelectedItem().toString();
        //System.out.println(tableName);
        try{
            Statement statement = connect.createStatement();
            ResultSet rs = statement.executeQuery("select * from "+tableName);
            // It creates and displays the table
            //JTable jTab  = new JTable(buildTableModel(rs));
            //JOptionPane.showMessageDialog(null, new JScrollPane(jTab));
            jTable1.setModel(buildTableModel(rs));

            
            
        }
        catch(Exception e){
            
        }
        
        
        
        
    }//GEN-LAST:event_tableComboBox2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        
        try{
            int row = jTable1.getSelectedRow();
            int col = 0;
            tableName = tableComboBox2.getSelectedItem().toString();
            Object value = jTable1.getValueAt( row, col );

            String colName= jTable1.getModel().getColumnName(0);

            String query ="delete from "+tableName+" where "+colName+" = "+ value+"";
            try {
                PreparedStatement preparedStmt = connect.prepareStatement(query);
                preparedStmt.execute();

                JOptionPane.showMessageDialog(null, "Selected Row Deleted!!!");
                System.out.println("has been Deleted !");

                try{
                    tableName = tableComboBox2.getSelectedItem().toString();
                    Statement statement = connect.createStatement();
                    ResultSet rs = statement.executeQuery("select * from "+tableName);
                    jTable1.setModel(buildTableModel(rs));
                }
                catch(Exception e){

                }


            }catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error!!!!");
                System.out.println("has not been Deleted !");

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No Row Selected!!!!");
            System.out.println("No Row Selected!!!");
        }

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
        try{
            connect.close();
        }
        catch(Exception e){
            
        }
        DatabaseApplication da = new DatabaseApplication();
        da.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        tableName = tableComboBox2.getSelectedItem().toString();
        if( tableName.equals("coach"))
        {
            InsertCoach ic = new InsertCoach(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("player"))
        {
            InsertPlayer ic = new InsertPlayer(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("stadium"))
        {
            InsertStadium is = new InsertStadium(connect);
            is.setVisible(true);
        }
        else if( tableName.equals("time_slot"))
        {
            InsertTimeSlot ic = new InsertTimeSlot(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("fouls"))
        {
            InsertFouls ic = new InsertFouls(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("goals"))
        {
            InsertGoals ic = new InsertGoals(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("matchplay"))
        {
            InsertMatchplay ic = new InsertMatchplay(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("match_details"))
        {
            InsertMatchDetails ic = new InsertMatchDetails(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("player_stats"))
        {
            InsertPlayerStats ic = new InsertPlayerStats(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("referee"))
        {
            InsertReferee ic = new InsertReferee(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("schedules"))
        {
            InsertScedules ic = new InsertScedules(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("team"))
        {
            InsertTeam ic = new InsertTeam(connect);
            ic.setVisible(true);
        }
        else if( tableName.equals("team_stats"))
        {
            InsertTeamStats ic = new InsertTeamStats(connect);
            ic.setVisible(true);
        }
   
    }//GEN-LAST:event_insertBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
       
        tableName = tableComboBox2.getSelectedItem().toString();
        int row = jTable1.getSelectedRow();
        if(!jTable1.getSelectionModel().isSelectionEmpty()){
            
            
            if( tableName.equals("coach"))
            {
                String id = jTable1.getModel().getValueAt(row, 0).toString();
                String nationality = jTable1.getModel().getValueAt(row, 1).toString();
                String name = jTable1.getModel().getValueAt(row, 2).toString();


                UpdateCoach uc = new UpdateCoach(id,name,nationality,connect);
                uc.setVisible(true);
            } 
            else if ( tableName.equals("team"))
            {
                String team_id = jTable1.getModel().getValueAt(row, 0).toString();
                String team_name = jTable1.getModel().getValueAt(row, 1).toString();
                String coach_id = jTable1.getModel().getValueAt(row, 2).toString();
                String stadium_name = jTable1.getModel().getValueAt(row, 3).toString();


                UpdateTeam uc = new UpdateTeam(team_id,team_name,coach_id,stadium_name,connect);
                uc.setVisible(true);
            } 
            else if ( tableName.equals("team_stats"))
            {
                String team_id = jTable1.getModel().getValueAt(row, 0).toString();
                String season = jTable1.getModel().getValueAt(row, 1).toString();
                String position = jTable1.getModel().getValueAt(row, 2).toString();


                UpdateTeamStats uc = new UpdateTeamStats(team_id,season,position,connect);
                uc.setVisible(true);
            } 
        }else{
            JOptionPane.showMessageDialog(null, "No Row Selected!!!");
        }
        
        
        
        
            
            /*int col = 0;
            Object value = jTable1.getValueAt( row, col );

            String colName= jTable1.getModel().getColumnName(0);
            
            
            String dept = jTable1.getModel().getValueAt(row, 2).toString();
            String tot_cred = jTable1.getModel().getValueAt(row, 3).toString();
            
            
            UpdateForm uf = new UpdateForm(id,name,dept,tot_cred,connect);
            uf.setVisible(true);*/
            

            

                        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Query q = new Query(connect);
        q.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed
    public static DefaultTableModel buildTableModel(ResultSet rs)
        throws SQLException {

        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    ArrayList<String> tbName = new ArrayList<String>();
    public void showTable() {
        try {
            DatabaseMetaData md = connect.getMetaData();
            ResultSet rst = md.getTables(null, null, "%", null);
            while (rst.next()) {
              tbName.add(rst.getString(3));
              System.out.println(rst.getString(3));
              
            }
            
            tableComboBox2.setModel(new DefaultComboBoxModel( tbName.toArray()));
        }
        catch(Exception e){
            e.printStackTrace();
        }       
    }
    
    
    /*public ArrayList<String> getAllTableName() {
        
        if(connect != null){
            jComboBox1.removeAllItems();
            ArrayList<String> tbName = getAllTableName();
            //jComboBox1.setModel(new DefaultComboBoxModel( tbName.toArray()));

            for(String s : tbName){
                jComboBox1.addItem(s);
            }
                jComboBox1.repaint();
        }
        
        ArrayList<String> tbName = new ArrayList<String>();
        try {
            DatabaseMetaData md = connect.getMetaData();
            ResultSet rs = md.getTables(null, null, "%", null);
            while (rs.next()) {
               
                tbName.add(rs.getString(4));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
       return tbName;
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableClass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableClass(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton insertBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox<String> tableComboBox2;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
